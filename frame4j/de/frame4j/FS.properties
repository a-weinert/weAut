#  Property-File for FS.java
#  V.$Revision: 1 $, $Date: 2017-01-14 13:19:07 +0100 (Sa, 14 Jan 2017) $
#
#  V0.00 (07.09.00 11:31)
#  V0.01 (04.07.01 15:16)
#  V0.02 (03.12.2001 20:36)  : Option -log added, parse partial, nodirs
#  V0.20 (17.05.2002 13:19)  : de, AppBase, comf. graf. Log question
#  V0.21 (09.06.2002 10:34)  : those/omitFiles gemäß DateiService.set(prop)
#  V0.22 (25.01.2005 11:44)  : common help, -log a o c w/o parameters
#  V2.xy (28.02.2006 10:47)  : pureName, antTime
#  V.160 (25.10.2009 19:17)  : Subversion repair begun
#  Copyright 2000 - 2002, 2005 - 2006, 2009  Albrecht Weinert



#  FS help texts
#  ~~~~~~~~~~~~~

helpText=FS bietet Datei- und Verzeichsuchdienste sowie die Ermittlung von \
\n         Datei-\"Dubletten\" und einen SVN-Reparaturmodus. \
\n \
\n  Aufruf    : java  FS [optionen]  Dir1[\\[Name] [Dir2\\[Name] \
\n              DirX = Verzeichnis; muss mit \\ oder mit \
\n                     Dateinamemskriterien enden. \
\n              Name = Dateinamensangabe, auch mit Wildcards und Typlisten \
\n    Optionen: \
\n -d, -lDirs :  Auch Verzeichnisse, die den Dateikriterien entsprechen, \
\n               auflisten. \
\n -ThoseDirs :  Der nachfolgende Parameter gibt Namenskriterien für \
\n -td           Unterverzeichnisse vor.  Ohne -ThoseDirs oder -omitDirs \
\n               werden bei Unterverzeichnissen alle Namen akzeptiert. \
\n -OmitDirs  :  Der nachfolgende Parameter gibt eine Liste nicht zu \
\n -od           berücksichtigender Unterverzeichnisse an. Beispiel: \
\n               -OmitDirs \"\\WinNT;\\DOS;\\Programme\"    \
\n -ThoseFiles:  Der nachfolgende Parameter gibt Namenskriterien für \
\n -tf           Dateien vor. Dies kann auch im Parameter Dir geschehen. \
\n -OmitFiles :  Der nachfolgende Parameter gibt eine Liste nicht zu \
\n -of           berücksichtigender Dateien an.  \
\n -cs -case  :  Namenskriterien / -vergleiche G/K-sensitiv (Unix default). \
\n -ncs -nocase: Namenskrit. / -vgl. nicht G/K-sensitiv (Windows default). \
\n -oneDay    :  Nur in den letzten 24 h modifizierte Dateien akzeptieren.\
\n -since -til:  Der nachfolgende Parameter ist eine Zeitangabe. Nur seitdem \
\n -von -seit -bis   bzw. bis dann modifizierte Dateien auflisten/akzeptieren.\
\n -seit -bis    bzw. bis dann modifizierte Dateien auflisten.  \
\n -r         :  Rekursiv, mit Unterverzeichnissen (default).       \
\n -nr        :  Besuche keine Unterverzeichnisse (keine Rekursion). \
\n \
\n    Optionen für und mit Suche und Auswahl gleicher Dateien: \
\n -E -equal  :  Nur Dateien mit gleichem Namen, Datum und Länge auflisten \
\n               (schließt -r bei nur einer Directory-Angabe ein). \
\n -ndc       :  Wie -e, jedoch das Datum der letzten Modifikation nicht als \
\n               Kriterium für Gleichheit einbeziehen. \
\n -cc        :  Wie -ndc und zusätzlich den Dateiinhalt (Byte für Byte) als \
\n               Kriterium für Gleichheit einbeziehen. \
\n -keep      :  Bei eine Liste von Dubletten wird aus jeder Gruppe eine \
\n               Datei mit /// auskommentiert.  \
\n -aufr      :  Entspricht -e -r -keep -v \
\n \
\n    Optionen für Listings ohne Suche gleicher Dateien: \
\n -pureName  :  Nur Dateinamen (ohne Größe, Datum etc.; default) \
\n -longList  :  Dateinamen mit Größe, Datum etc. in die Ausgabe  \
\n -antTime   :  Dateinamen mit vorangestellter Zeit im ANT-<touch>-Format \
\n               (3 token) und Größe (1 token) in die Ausgabe \
\n -repairSVN :  Generiert eine ANT Task, die den harten Subversion Bug, das \
\n               Datum erstmalig zugefügter Dateien zu vergessen, repariert. \
\n -addTime    : Nächster Parameter ist kurz nach der Zeit des ersten import \
\n               / commit (=add). (default: 10 min. nach Lauf mit -repairSVN \
\n -relateToDir: Dateinamen werden ggf. in Bezug auf das (erste) zu \
\n -rTd          listende Verzeichnis relativiert. \
\n \
%hlpfwopt%\
\n  1.) Ein Parameter mit Wildcardzeichen  (?, *)  ist im allgemeinen mit \
\n      zwei Doppelanführungszeichen (\") zu klammern. Nur * kann \
\n      stattdessen aber auch durch + ersetzt werden. \
\n  2.) Mehrteilige Zeitangaben nach -since -seit -til -bis müssen in \
\n      Anführungszeichen gesetzt werden oder das Leerzeichen muss durch \
\n      Underline _ ersetzt werden: \
\n      1986/9/11_10:13_PM_AST oder \"vorgestern 13:21\" zum Beispiel. \
\n                            (FS.properties helpText 17.01.2013 A.W.)

en.helpText=FS searches files and directories, detects doublets and more. \
\n \
\n  Execution : java  FS [options]  Dir1[\\[Name] [Dir2\\[Name] \
\n              DirX = directory; must end with  \\ or with \
\n                     file name criteria. \
\n              Name = file name specification, also wild cards and type lists\
\n    Options : \
\n -d, -lDirs :  List also directories matching the file name criteria. \
\n -ThoseDirs :  The next parameter specifies name criteria for (sub)  \
\n -tD           directories to visit. Without -ThoseDirs or -omitDirs \
\n               sub-directories of all names will be accepted. \
\n -omitDirs  :  Next parameter is a list of (sub-) directories to be \
\n  -od          left untouched. Example: -OmitDirs \"\\WinNT;\\DOS;\\Programme\"\
\n -ThoseFiles:  The next parameter specifies name criteria for files. This \
\n -tf           can also be done as the end of a Dir parameter. \
\n -OmitFiles :  Next parameter is a list of files not to consider. \
\n -of           short for -OmitFiles.  \
\n -cs -case  :  Name criteria are case sensitive (Unix / Linux default). \
\n -ncs -noCase: Name criteria are not case sensitive (Windows default). \
\n -oneDay    :  List only files modified during the last 24 hours. \
\n -days n    :  List only files modified during the last n days. \
\n -daysOld n :  List only files NOT modified during the last n days.\
\n -since -til:  Next parameter specifies time. List only files modified \
\n               between since and til (example: -since Monday -til Tuesday).\
\n -r         :  Visit su-bdirectories recursively (default). \
\n -nr        :  Don't visit sub-directories (no recursion). \
\n \
\n    Options for search for equal files or \"doublets\": \
\n -E -equal  :  List only files with a sibling of equal name, date and size. \
\n               (this implies -r if only one directory is specified.) \
\n -ndc       :  Like -e, but without considering the modification date as \
\n               criterion for (un-) equality (often adulterated). \
\n -cc        :  Like -ndc and compare the file contents (Byte by Byte) as \
\n               criterion for  equality. \
\n -keep      :  Within a list of doublets one out of every group will be \
\n               commented out (by ///) for keep in subsequent Era run.  \
\n -tidy      :  Is like -e -r -keep -v \
\n \
\n    Options for Listings without searching for equal files: \
\n -pureName  :  List only filename w/o size, date and else (default) \
\n -longList  :  List filename plus size, date and else \
\n -antTime   :  put the file time in (ugly) ANT-<touch> format (3 token) and\
\n               size (1 token) in front of the file name \
\n -repairSVN :  Make an ANT task to repair the SVN bug forgetting the \
\n               modification time on first import / commit (=add). \
\n -addTime    : Next parameter specifies the time shortly after the first  \
\n               commit/add. (default: 10 minutes after run with -repairSVN \
\n -relateToDir: file names will be made relative to the (first) directory \
\n -rTd          specified. \
\n \
%hlpfwopt%\
\n  1.) A parameter containing wildcards (?, *) has to be bracketed by two  \
\n      double quotes (\") most of the time, to inhibit platform's or Java's\
\n      (dangerous) wildcard expansion. But * can be replaced by +. \
\n  2.) Multipart time specifications after -since and -til have to be set \
\n      between double quotes or spaces have to be replaced by underscore\
\n      (_):  1986/9/11_10:13_PM_AST or \"yesterday 13:21\" e.g. \
\n                            (FS.properties helpText 17.01.2013 en A.W.)


#  FS parameter evaluation
#  ~~~~~~~~~~~~~~~~~~~~~~~

# Hint: Option's names here only in lower case !!! (Prop.parse() acc. all)  
#     -option  =  effect  [## effect 2 ...

option-d=       listDirs=true
option-ldirs=   listDirs=true

option-r=       recursion=true
option-nr=      recursion=false
option-e=       equalsOnly=true 
option-equal=   equalsOnly=true 
option-ndc=     equalsOnly=true  ## dateCompare=false
option-cc=      equalsOnly=true  ## dateCompare=false ## contentCompare=true
option-keep=    keepOne=true  ## equalsOnly=true
option-aufr=    keepOne=true ## equalsOnly=true ## recursion=true \
                               ## listDirs=false ## verbosity=true
option-tidy=    keepOne=true ## equalsOnly=true ## recursion=true \
                               ## listDirs=false ## verbosity=true
option-purename= pureName=true  ## antTime=false ## equalsOnly = false
option-anttime = pureName=false ## antTime=true 
option-longlist= pureName=false 
option-nosort  = doSort = false
option-relatetodir = relateToDir = true
option-rtd     = relateToDir = true
option-relateto= relateToDir = false ## relateTo


##  properties for the SVN bug repair ANT task  --------------------

option-repairsvn = pureName=false ## antTime=true ## equalsOnly = false\
    ## relateToDir = true ## svnRepair = true ## omitExtraDirs = .svn \
    ## recursion=true  ## dateCompare=false
targetName = repairDates4SVN
beforeDateName = firstCommit
buildFileName = build.xml
buildFileDir
projectName = repair SVN's file modification time bug
antCompareTimeFormat = m/d/Y h:i a
afterFirstCeckInTime
option-addtime = afterFirstCeckInTime
antXMLencoding = ISO-8859-1

omitExtraDirs
omitExtraFiles

## -------------------------------------------------------------------

option-omitdirs= omitDirs
option-thosedirs= thoseDirs
option-omitfiles= omitFiles
option-thosefiles= thoseFiles
option-od= omitDirs
option-td= thoseDirs
option-of= omitFiles
option-tf= thoseFiles

option-oneday=  days=1
option-days=    days
option-daysold= daysOld
option-since=   days=nosetting ## since
option-seit=    days=nosetting ## since
option-von=     days=nosetting ## since
option-til=     daysOld=nosetting ## til
option-bis=     daysOld=nosetting ## til
 
# All single word parameters are :  directory[\fileCriteria]
# Hint: parse partial is true with FS 
word-0=directory

# First directory to list (or the only one; null defaults to . )
directory

# Select criteria

listDirs   = false
recursion  = true
equalsOnly = false
dateCompare= true
contentCompare = false
quoteSpace = true
pureName = true
antTime  = false
doSort   = true

relateToDir = false
relateTo

# This is for Linux like behaviour
verbosity = silent

## ---- (inter) nationalising of stereotypical expressions

de.nofilfnd = \n ///  Keine Dateien gefunden.\n
en.nofilfnd = \n ///  no files found.\n
fr.nofilfnd = \n ///  pas des fichier trouvées.\n

de.filsfnd  = \n ///   {0} Datei{0en} gefunden.\n
en.filsfnd  = \n ///   {0} file{0s} found.\n
fr.filsfnd  = \n ///   {0} fichier{0s} trouvées.\n

de.fssumry  = \n ///   {0} Datei{0en} gefunden,\
              \n ///   davon {1} Dublette{1n} in {2} Gruppe{2n}.\n
en.fssumry  = \n ///   {0} file{0s} found,\
              \n ///   {1} of them doublette{1s} in {2} Group{2s}.\n

