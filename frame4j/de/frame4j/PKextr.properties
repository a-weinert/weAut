#  Property-File for PKextr.java  V$Revision: 1 $, $Date: 2017-01-14 13:19:07 +0100 (Sa, 14 Jan 2017) $
#  V0.00 (27.12.2004 19:56) : new
#  V0.01 (09.09.2004 09.20) : small corrections
#  V2.04 (06.11.2008 11:21) : exportPrivate
#  Copyright 2004   Albrecht Weinert



#  PKextr help texts  (de, en)
#  ~~~~~~~~~~~~~~~~~~~~~~~~~~

helpText=PKextr ermittelt / extrahiert den public key.  \
\n \
\n  Aufruf    : java   PKextr [@propFile] [optionen] \
\n                         [certif | [-ks keystore] alias] [pukyfile \
\n              propFile = Property-Textdatei, (auch mehrere mit jeweils @), \
\n              optionen = Optionen für PKextr, \
\n              certif   : Zertifikat-Datei (i.A. .cer)\
\n              keystore : keystore-file-Name (default: user keystore) \
\n              alias    : Alias-Name des Schlüssels im ggf. keystore \
\n              pukyfile : Ausgabedatei für binär kodierten public key \
n\  \
\n  Optionen  : \
\n  -x509       : Einlesen von Zertifikat Typ X.509 (default) \
\n  -jks        : Einlesen von keystore Typ JKS (Java keystore) \
\n  -ks  file   : Einlesen von keystore Typ JKS; nachfolgender Parameter ist \
\n                der Dateiname (default user keystore) \
\n  -pkcs12     : Einlesen von keystore Typ PKCS12 \
\n  -pass passw : Nachfolgender Parameter ist bedarfsweise das Passwort für \
\n                den keystore \
\n -exportPrivate: private statt public key (nur mit keystores) \
%hlpfwopt%\
\n               (PKextr.properties helpText 06.11.2008, A.W., de)


en.helpText=PKextr gets or extracts the public key.   \
\n  Execute   : java   PKextr [@propFile] [options] \
\n                         [certif | [-ks keystore] alias [passw]] [pukyfile \
\n              propFile = property text file, (any number name prefixed by @), \
\n              options  = options for PKextr see below, \
\n              certif   : certificate file (often extension .cer)\
\n              keystore : keystore file name (default: use user's keystore) \
\n              alias    : alias name of key / entry in keystore \
\n              passw    : password (if necessary) for keystore / entry \
\n              pukyfile : output file for binary encoded public key \
\n  \
\n  Options: \
\n -x509      :  read certificate of  type X.509 (default) \
\n -jks       :  read from keystore type JKS (Java keystore) \
\n  -ks  file :  read from keystore type JKS; next parameter names the keystore file; \
\n               naming no file by -ks-option means standard user keystore. \
\n -pkcs12    :  read from keystore type Typ PKCS12 \
\n -pass passw:  next parameter is password for keystore \
\n -exportPrivate: get private instead of public key (only from keystore) \
%hlpfwopt%\
\n               (PKextr.properties en.helpText 11-06-2008, A.W.)

#  PKextr parameter evaluation
#  ~~~~~~~~~~~~~~~~~~~~~~~~~~~

## [alias pasword] puky
word-0 = w0
word-1 = w1

w0
w1
storePassW

certFileName
fromCert = true
certType = X.509
exportPrivate = false

option-x509   = certType = X.509  ## fromCert = true
option-pkcs12 = certType = PKCS12 ## fromCert = true
option-jks    = certType = JKS    ## fromCert =  false
option-ks     = certType = JKS    ## fromCert =  false ## certFileName
option-pass   = storePassW
option-exportprivate = fromCert =  false ## exportPrivate = true

#-- (inter) nationalising of stereotypical expressions  ------------------

en.pukynotgtb  = \ncan't get public key from certificate {0} \n
de.pukynotgtb  = \nPublic key nicht aus Zertifikat {0} extrahierbar.\n

de.pukyfrcert  = \n  public key aus certificate \"{0}\" extrahiert.\n
en.pukyfrcert  = \n  read public key from certificate \"{0}\".\n

de.pukyfrstor  = \n  public key \"{0}\" aus keystore \"{1}\" geholt.\n
en.pukyfrstor  = \n  read public key \"{0}\" from keystore \"{1}\".\n

de.pukywrite   = \u0020public key in Datei \"{0}\" schreiben.\n
en.pukywrite   = \u0020Write public key to \"{0}\"\n

de.prkywrite   = \u0020private key in Datei \"{0}\" schreiben.\n
en.prkywrite   = \u0020Write private key to \"{0}\"\n


en.pkexpassr   = <enter password here>
de.pkexpassr   = <Passwort hier einsetzen>

en.pkexpasye   = use as password
de.pkexpasye   = als Passwort

en.pkexpasno   = no password
de.pkexpasno   = kein Passwort

en.pkexpdtit   = \u0020 PKextr password dialog
de.pkexpdtit   = \u0020 PKextr Passwortabfrage
