#  Property-File for XMLio.java
#  V$Revision: 1 $ ($Date: 2017-01-14 13:19:07 +0100 (Sa, 14 Jan 2017) $)
#  V00.00 (15.08.2001 14:57) : new
#  V00.02 (24.05.2002 15:54) : code compact
#  V00.03 (14.03.2004 15:26) : structList 
#  V02.22 (12.06.2005 16:01) : purpose line in helpText
#  V02.23 (30.11.2005 17:22) : JDom totally out; XMLtrans to here
 
#  Copyright 2001 - 2002, 2005  Albrecht Weinert


#  XMLio help texts (German, English)
#  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

helpText=XML-Ein-Ausgabe: XML-Text -parse-> DOM -write-> XML-Text \
\n \
\n  Aufruf    :  java  XMLio @propFile [optionen] Quelle Ziel [-trans Trans] \
\n               propFile = PropertyTextdatei \
\n               Quelle = Datei oder URL, XML zu parsen oder roh.\
\n               Ziel   = Datei oder Verzeichnis für Ausgabe. \
\n               Trans  = Datei oder URL XSL-Datei (XML - Stylesheet).\
\n \
\n   Optionen : \
\n -deSer     :  Eingabe ist serialisiertes XML. \
\n -parse     :  Eingabe ist XML (default).  \
\n -noValid, -nV     :  Kein validierendes XML Parsen. \
\n -valid     :  Validierendes XML Parsen (default). \
\n -nameSpace, -nS   :  XML Parsen mit name space support. \
\n -useSchema, -uSch :  Validierendes XML Parsen mit Schema und Namespaces. \
\n -schemaSource     :  wie -useSchema; zusätzlich ist der nachfolgende Para-\
\n                      meter der Name einer lokalen Schema-Datei. \
\n -trans     :  Nächster Parameter bezeichnet die Datei oder URL eines .xsl-\
\n               style sheets, dessen Transformationen auf den aus der Eingabe\
\n               erstellten DOM-Baum angewandt werden. Dies geschieht vor der\
\n               Ausführung von ggf. -compact oder  -noDefAtts. \
\n \
\n -ser       :  Ausgabe ist serialisiertes xmlDoc (default). \
\n -write     :  Ausgabe ist XML     (schließt -deser ein). \
\n -structList:  Ausgabe ist (Text-) Darstellung der DOM-Struktur. Nächster \
\n -sL           Parameter ist die Baum- / Rekursionstiefe. \
\n -sLf       :  Entspricht -nV -sL 99  (Ganze Struktur ohne Validierung) \
\n -noLines   :  Keine (zusätzlichen) Zeilenvorschübe bei XML-Ausgabe. \
\n -noDefAtts :  Löschen von einigen HTML-default-Attributen \
\n -copmact   :  Mehrere white spaces werden space in der XML-Ausgabe. \
\n -expandempty: Leere Tags bekommen ein Ende-Tag in der XML-Ausgabe. \
\n -encoding  :  Nächster Parameter ist Ausgabe-Kodierung (def. ISO-8859-1)\
\n -omitEnc[oding]    :  Keine Kodierungsangabe in der XML-Ausgabe. \
\n -omitDec[laration] :  Keine XML-Deklaration in der XML-Ausgabe. \
\n -indent    :  Nächster Parameter ist indent-String (def. \"\"). \
\n -indentSize:  Nächster Parameter ist indent-Tiefe  (default 0). \
\n \
\n -noProxy,  :  Keine Proxy-Systemeinstellungen beim Holen von URLs \
\n        -nP    verwenden (default). \
\n -useProxy, -proxy  :  Die Proxy-Einstellungen verwenden. \
\n -proxyHost,:  Nächster Parameter ist die Angabe der Systemeinstellung \
\n        -pH    proxyHost; Verwenden der Proxy-Einstellungen an. \
\n -proxyPort,:  Nächster Parameter ist die Angabe der Systemeinstellung \
\n        -pp    proxyPort; Verwenden der Proxy-Einstellungen an. \
%hlpfwopt%\
\n  1.) Das Holen einer URL erfordert u.U. das Setzen der Properties \
\n      proxyHost (default=%proxyHost%) und proxyPort (default=%proxyPort%).\
\n      Sind diese unzutreffend gesetzt, so erfolgt oft erst nach einer \
\n      langen Wartezeit ein Abbruch mit Fehlermeldung.   \
\n                            (XMLio.properties helpText 11.12.2012 de  A.W.)

helpText=XML input / output: XML text -parse-> DOM -write-> XML text \
\n \
\n  Execute   :  java  XMLio @propFile [options] source dest [-trans Trans] \
\n               propFile = property text file (supplements {11}.properties) \
\n               source = file or URL, XML to be parsed or raw.\
\n               dest   = file or directory for output. \
\n               Trans  = file or URL, XSL file (XML stylesheet).\
\n \
\n   Options  : \
\n -deSer     :  input is serialised XML. \
\n -parse     :  input is  XML (default).  \
\n -noValid, -nV     :  parse non validating. \
\n -valid            :  parse XML validating( default). \
\n -nameSpace, -nS   :  parse XML with name space support. \
\n -useSchema, -uSch :  parse XML validating with schema and name spaces. \
\n -schemaSource     :  like -useSchema; additionally the next parameter \
\n                      is the name of a local schema file. \
\n -trans     :  Next parameter specifies the file or URL of a .xsl style \
\n               sheet, the transformation defined by it to by applied to the\
\n               input (DOM tree). This will happen before the execution of \
\n               optional  -compact or  -noDefAtts. \
\n \
\n -ser       :  Output is serialised xmlDoc (default). \
\n -write     :  Output is XML     (includes -dese). \
\n -structList:  Output  is (text-) presentation of the DOM structure, next \
\n -sL           parameter giving the tree / recursion depth. \
\n -sLf       :  Is like -nV -sL 99  (output whole structure, non validating)\
\n -noLines   :  No extra line feeds for XML output. \
\n -noDefAtts :  Delete some HTML default attributes. \
\n -copmact   :  Multiple white spaces get one space in the XML output. \
\n -expandempty: Empty tags get an end tag ine the XML output. \
\n -encoding  :  Next parameter is the output encoding (default ISO-8859-1)\
\n -omitEnc[oding]    :  Omit the coding specification in the XML output. \
\n -omitDec[laration] :  Omit the XML declaration in the output. \
\n -indent    :  Next parameter is an indent String (def. \"\"). \
\n -indentSize:  Next parameter is the indent depth  (default 0). \
\n \
\n -noProxy, -nP :  Use no proxy system properties for fetching from URLs \
\n -useProxy, -proxy  :  Do use the proxy settings for fetching from URLs \
\n -proxyHost,:  Next parameter is the specification for the system setting\
\n        -pH    or property proxyHost; and do use the proxy settings. \
\n -proxyPort,:  Next parameter is the specification for the system setting \
\n        -pp    or property proxyPort; and use it. \
%hlpfwopt%\
\n  1.) The fetching from an URL requires under certain circumstances the  \
\n      setting of the properties proxyHost (default=%proxyHost%) and \
\n      proxyPort (default=%proxyPort%).\
\n      Are they set wrongly, the abort and error messages often come only \
\n      after a unreasonable long operating system time out. That is totally\
\n      out of the control of this application. (So please don't blame it.) \
\n                            (XMLio.properties helpText 2012/12/11 en A.W.)


#   Parameter evaluation
#   ~~~~~~~~~~~~~~~~~~~~

#   -option=  effect  [## effect 2 ...

option-noproxy= proxySet=false
option-np=      proxySet=false
option-useproxy= proxySet=true
option-proxy     proxySet=true

option-proxyhost = proxySet=true ## proxyHost
option-ph        = proxySet=true ## proxyHost

option-proxyport = proxySet=true ## proxyPort
option-pp        = proxySet=true ## proxyPort

option-novalid= validating=false
option-nv=      validating=false
option-valid  = validating=true

option-namespace = namespaceAware=true
option-ns        = namespaceAware=true

option-parse     = parse=true
option-deser     = parse=false
option-write     = serialise=false
option-ser       = serialise=true

option-nolines   = newlines=false
option-encoding  = encoding
option-omitencoding    =  omitEncoding=true
option-omitenc         =  omitEncoding=true
option-omitdeclaration =  omitDeclaration=true
option-omitdec         =  omitDeclaration=true
option-expandempty     =   expandEmptyElements=true
option-compact   = textNormalize=true
option-nodefatts = clearDefAtts=true
option-useschema=  useSchema = true ## validating=true ## namespaceAware=true
option-usch=       useSchema = true ## validating=true ## namespaceAware=true
option-structlist= serialise=false ## structList
option-sl=         serialise=false ## structList
option-slf=        serialise=false ## structList=99 ## validating=false

option-schemasource= useSchema = true ## validating=true \
                        ## namespaceAware=true ## schemaSource 
option-trans=trans

option-indent     = indent
option-indentsize = indentSize

# single word parameters are  XML in and output
word-0=source
word-1=dest


dest
source
trans

parse=     true
serialise= true
structList = 0

# Proxy setting (cache is exemplary, set with -ph as needed)
proxySet   = false
proxyHost  = cache
proxyPort  = 8080


# XML-Parser settings
validating     = true
namespaceAware = false

useSchema= false
schemaSource=

ignoreWhiteSpace = false
expandEntityReferences = false
coalescing = false
ignoreComments = false


# XML-Manipulator settings

clearDefAtts    = false


# XML-Writer settings

newlines        = true
encoding        = ISO-8859-1
omitEncoding    = false
omitDeclaration = false
expandEmptyElements  = false
textNormalize   = false
indent          =
indentSize      = 0
