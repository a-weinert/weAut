#  Property file for Del.java
#  V.$Revision: 1 $ ($Date: 2017-01-14 13:19:07 +0100 (Sa, 14 Jan 2017) $)
#
#  V02.01 (20.05.2003 13:30) : new from Era
#  V02.2x (12.06.2005 16:01) : purpose line in help texts
#  V02.24 (19.01.2006 08:44) : -delE.. corrected; -rd added
#  Copyright 2003, 2006  Albrecht Weinert


#  Del help texts  (de, en)
#  ~~~~~~~~~~~~~~~~~~~~~~~~

helpText=Del löscht Dateien, auch gemäß komplexen Auswahlkriterien. \
\n \
\n  Aufruf    :  java Del @properties [optionen]  datei[en]\
\n               datei[en]: Dateiangabe, auch mit Wildcards oder Typ-Listen\
\n \
\n   Optionen : \
\n -d -delEmpty: Anschließendes Löschen des ggf. leeren Verzeichnisses \
\n -nd        :  Anschließend kein Löschen des ggf. leeren Verzeichnisses \
\n -t -tDel   :  Löschen auch von Verzeichnissen, die den \
\n               Dateikriterien entsprechen (hebt -fDel auf). \
\n -f -fDel   :  Löschen von Dateien, die den Dateikriterien entsprechen\
\n               (default außer nach -t -tDel). \
\n -r         :  Rekursiv, mit Unterverzeichnissen. \
\n -empty     :  Startverzeichnis leeren, aber selbst stehen lassen. \
\n               (Schließt -r -t -d -f ein) \
\n -rd        :  Startverzeichnis leeren, und es selbst löschen. \
\n -cs -case  :  Namenskriterien G/K-sensitiv (Unix / Linux default). \
\n -ncs -noCase: Namenskriterien nicht G/K-sensitiv (Windows default). \
\n -omitDirs  :  Der nachfolgende Parameter gibt eine Liste nicht zu \
\n               berücksichtigender Unterverzeichnisse an. Beispiel: \
\n               -omitDirs \"\\WinNT;\\DOS;\\Programme\"  \
\n -oneDay    :  Nur in den letzten 24 h modifizierte Dateien löschen. \
\n -days n    :  Nur in den letzten n Tagen modifizierte Dateien löschen. \
\n -daysOld n :  Nur in den letzten n Tagen NICHT modifizierte Dateien, \
\n               also nur ältere, löschen. \
\n -since -til:  Der nachfolgende Parameter ist eine Zeitangabe. Nur seitdem \
\n -von -seit -bis   bzw. bis dann modifizierte Dateien löschen.  \
%hlpfwopt%\
\n  1.) Ein Parameter mit Wildcardzeichen  (?, *)  ist im allgemeinen \
\n      mit zwei Doppelanführungszeichen (\") zu klammern. \
\n      * kann aber auch durch + ersetzt werden." \
\n  2.) Soll eine Dateiangabe als Parameter mit Minus beginnen ist ein \
\n      zweites Minus davorzusetzen (aus -name wird --name), damit der Name \
\n      nicht als Optionsparameter missinterpretiert wird.\
\n  3.) Soll ein Dateiangabe als Parameter mit @ beginnen ist entsprechend \
\n      ein zweites @ davorzusetzen (aus @name wird @@name). \
\n  4.) ACHTUNG! Diese Anwendung löscht auch schreibgeschützte und \
\n      verborgene Dateien  (DOS/Windows).\
\n  5.) Für Datei- und Verzeichniskriterien bestehen über das oben Gesagte \
\n      hinaus alle Möglichkeiten die mit Prop(erties) in einem \
\n      FileService-Objekt einstellbar sind. \
\n  6.) Mehrteilige Zeitangaben nach -since -seit -til -bis müssen in \
\n      Anführungszeichen gesetzt werden oder das Leerzeichen muss durch \
\n      Underline _ ersetzt werden: \
\n      1986/9/11_10:13_PM_AST oder \"vorgestern 13:21\" zum Beispiel. \
\n  7.) Bei der Option -test werden die betroffenen Dateien nur gelistet und \
\n      nie gelöscht.\
\n                        (Del.properties helpText, 19.01.2006, de)

en.helpText=Del deletes files, also chosen according to complex criteria. \
\n \
\n  Execution :  java Del @properties [options]  file[s]\
\n               file[s]: file specifications, including wild cards or \
\n                        file type lists\
\n \
\n   Options  : \
\n -d -delEmpty: Afterwards delete the (then) empty directory \
\n -nd        :  Don't delete empty directory afterwards \
\n -t -tDel   :  Delete also directories, fitting the given file criteria \
\n               (switches -fDel off). \
\n -f -fDel   :  Delete files, fitting the  the given file criteria\
\n               (default except after -t -tDel). \
\n -r         :  Visit subdirectories recursively. \
\n -empty     :  Empty (completely) the starting directory, but keep that \
\n               directory itself (includes  -r -t -d -f) \
\n -rd        :  Empty (completely) the starting directory and delete it. \
\n -cs -case  :  Name criteria are case sensitive (Unix / Linux default). \
\n -ncs -noCase: Name criteria are not case sensitive (Windows default). \
\n -omitDirs  :  The next parameter is a list of directories not to work on; \
\n               example:      -omitDirs \"\\WinNT;\\DOS;\\Programme\"  \
\n -oneDay    :  Delete only files modified during the last 24 hours. \
\n -days n    :  Delete only files modified during the last n days. \
\n -daysOld n :  Delete only files NOT modified during the last n days.\
\n -since -til:  Next parameter specifies time. delete only files modified \
\n               between since and til (example: -since Monday -til Tuesday).\
%hlpfwopt%\
\n  1.) A parameter containing wildcards (?, *) has to be bracketed by two  \
\n      double quotes (\") most of the time, to inhibit platform's or Java's\
\n      (dangerous) wildcard expansion. But * can be replaced by +. \
\n  2.) Should a (file name) parameter start with minus (-) put another - in\
\n      front to distinguish it from option parameters.\
\n  3.) Should a (file name) parameter start with at (@) put a second @ in \
\n      front to distinguish it from a extra .properties file parameter. \
\n  4.) ATTENTION! This application deletes files with read only, system and \
\n      hidden attributes (DOS/Windows).\
\n  5.) For file and directory criteria all (additional) possibilities apply\
\n      documented for the classes FileCriteria and FileService (all in\
\n      package de.frame4j.io) settable by Prop(erties). \
\n  6.) Multipart time specifications after -since and -til have to be set \
\n      in double quotes or spaces have to be replaced by underscore\
\n      (_):  1986/9/11_10:13_PM_AST or \"yesterday 13:21\" e.g. \
\n  7.) The option -test just lists the files that would be deleted without \
\n      touching them in any way.\
\n                        (Del.properties helpText, 03.02.2009, en)


#  Del parameter evaluation
#  ~~~~~~~~~~~~~~~~~~~~~~~~

# Hint: Option's names here only in lower case !!! (Prop.parse() acc. all)  
#     -option  =  effect  [## effect 2 ...

option-omitdirs= omitDirs
option-thosedirs= thoseDirs
option-omitfiles= omitFiles
option-thosefiles= thoseFiles

option-oneday=  days=1
option-days=    days
option-daysold= daysOld
option-since=   days=nosetting ## since
option-seit=    days=nosetting ## since
option-von=     days=nosetting ## since
option-til=     daysOld=nosetting ## til
option-bis=     daysOld=nosetting ## til

option-d=       delEmpty=true
option-delempty=delEmpty=true

option-t=      tDel=true ## fDel=false
option-tdel=   tDel=true ## fDel=false
option-f=      fDel=true
option-fdel=   fDel=true

option-r=   recursion = true

option-empty=   recursion = true ## delEmpty=true ## tDel=true \
                  ## fDel=true ## noStartDel=true
option-rd=   recursion = true ## delEmpty=true ## tDel=true \
                  ## fDel=true ## noStartDel=false


word-0 =  fileName


# Defined properties with default values
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

fileName
# important: no = after fileName; as must be default null, not default empty 

recursion = false
noStartDel=false
tDel     = false
fDel     = true
delEmpty = false
