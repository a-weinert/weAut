#  Property-File for BlinkOnPi.java
#  Copyright (c) 2021   Albrecht Weinert  a-weinert.de
propFileName=  BlinkOnPi.properties
propFileVers=  V.$Revision: 47 $ 
propFileDate=  $Date: 2021-05-13 19:06:22 +0200 (Do, 13 Mai 2021) $
#  so far:
#  V.  37  (14.04.2021) : new
#  V.  42  (01.05.2021) : PiUtil-properties introduced (and removed soon) 
#  V.  47  (12.05.2021) : evaluation of 4 parameters moved to PiUtil 


# PiUtil parameter evaluation
#default: argPiType= 3; argPort= 8888; argTimeout= 10000 (10s); argHost= 
word-0=argHost
word-1=argPort
option-timeout= argTimeout

option-pi3= argPiType=3
option-pi4= argPiType=4
option-pi0= argPiType=0
option-pi1= argPiType=1
option-pi2= argPiType=2

# BlinkOnPi parameter evaluation
# default ledRDpin = 11; ledYEpin = 22; ledGNpin = 13
option-north= ledRDpin=29 ## ledYEpin=31 ## ledGNpin=33
option-east=   ledRDpin=36 ## ledYEpin=38 ## ledGNpin=40
option-south=   ledRDpin=11 ## ledYEpin=13 ## ledGNpin=15
option-west=     ledRDpin=16 ## ledYEpin=18 ## ledGNpin=22
option-ledefault= ledRDpin=11 ## ledYEpin=22 ## ledGNpin=13
option-leddefault= ledRDpin=11 ## ledYEpin=22 ## ledGNpin=13

# default: buzzPin = 12, buttPin =  7; (piTraffic button Lo-active)
option-nobutbuz = buzzPin=0 ## buttPin=0
option-butbuztraffic = buzzPin=12 ## buttPin=7
option-buttpin = buttPin
option-buzzpin = buzzPin

option-uselock= useLock=true

#option-xyz hint: Frame4J evaluates options ignoring case by putting them to 
#     lower case and comparing them to the xyz part. That MUST be lowercase. 


# Help texts (German & English)
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~

helpText=BlinkOnPi ist ein Demo-Programm für Pi-IO - lokal und remote. \
\n Es läuft auf jedem Rechner mit Java und Frame4J und funktioniert mit \
\n jedem Raspberry Pi mit laufendem pigpiod daemon. \
\n \
\n  Aufruf    :  java BlinkOnPi [host [port]] [optionen] \
\n               host ist der Raspberry Pi mit der IO via piogpiod; default \
\n               ist auf einem Pi dieser selbst; sonst p.r.v.67, wenn \
\n               p.v.r.me die IP-Adresse, wo BlinkOnPi läuft, ist.  \
\n               port ist der Socket-port des pigpiod Daemons; default 8888  \
\n   \
\n  Beispiel 1 :  java BlinkOnPi -south \
\n  Beispiel 2 :  java BlinkOnPi raspi67 8888 -west \
\n \
\n  Optionen  : \
\n -pi3 -pi4 -pi0  :  Pi-Typ mit 40-pol. Standard-IO-Pfostenverbinder \
\n -p1 -pi2   :  Pi-Typen mit abweichender IO-Belegung; default: Pi3 \
\n -timeout   :  Nachfolgende Parameter ist socket timeout in ms; def. 10s \
\n -north -east -south -west : Auswahl einer von vier trafficPi-Ampeln \
\n               als LEDs rt, ge, gn; N: pin 29 31 33, E: 36 38 40  \
\n               S: 11 13 15, W: 16 18 22           \
\n -LEDefault :  traditionelle Belegung: 11 22 13  (default) \
\n -noButBuz  :  kein Knopf und Piepser \
\n -butBuzTraffic: Knopf Pin 7, Buzzer 12, wie bei trafficPi (default) \
\n -buttPin -buzzPin : nächster Parameter Pin für Knopf bzw. Piepser \
\n -useLock   :  Verwende IO-lock-Datei oder -Prozess; default: aus  \
%hlpfwopt%\
\n  1.) Ein Parameter mit Wildcardzeichen  (?, *) muss i.a mit zwei \
\n      Doppelanführungszeichen (\") geklammert werden, da die meisten JVMs \
\n      solche Parameter sonst in mehrere Dateinamen auflösen. Als Ersatz\
\n      für * kann daher auch + eingesetzt werden. \
\n      (Ende Hilfetext in %propFileName% %propFileVers% (%propFileDate%), de)


en.helpText=BlinkOnPi is a demo program for Pi-IO - local and remote. \
\n It runs on every machine with Java and Frame4J and works with every  \
\n Raspberry Pi with a pigpiod daemon running. \
\n \
\n  Execute   :  java BlinkOnPi [host [port]] [optionen] \
\n               host is the Raspberry Pi with IO via pigpioD; default on \
\n               a Pi is the Pi itself; otherwise its IP p.r.v.67, where \
\n               p.r.v.me is the IP of BlinkOnPi's machine. \
\n               port is the pigpiod daemon's socket port; default 8888  \
\n   \
\n  Example 1 :  java BlinkOnPi -south \
\n  Example 2 :  java BlinkOnPi raspi67 8888 -west \
\n \
\n  Optionen  : \
\n -pi3 -pi4 -pi0  :  Pi type with standard 40 pin IO connector \
\n -p1 -pi2   :  Pi types with other IO pin assignment; default: Pi3 \
\n -timeout   :  next parameter is socket timeout in ms; default 10s \
\n -north -east -south -west :  Choice of on trafficPi traffic lights \
\n               as LEDs rd, ye, gn; N: pin 29 31 33, E: pin 36 38 40  \
\n               S: pin 11 13 15, W: pin 16 18 22           \
\n -LEDefault :  traditional assignment: pins 11 22 13  (default) \
\n -noButBuz  :  no button no buzzer \
\n -butBuzTraffic: button pin 7, buzzer 12, as on trafficPi (default) \
\n -buttPin -buzzPin : next parameter is Pin of button resp. buzzer \
\n -useLock   :  do require IO-lock (file or process); default: off  \
%hlpfwopt%\
\n  1.) Parameters containing wild cards (?, *) have to be double quoted. \
\n      Otherwise the JVM may expand this parameter secretly (a java \
\n      feature, that is a dangerous bug). As a substitute methods of this \
\n      framework Frame4J do accept a plus sign (+) for the asterisk (*). \
\n       (end of en.helpText in %propFileName% %propFileVers%, %propFileDate%)

